pipeline {
    agent any
    tools{
        maven 'M2_HOME'
    }
    environment {
        registry = '259289693704.dkr.ecr.us-east-2.amazonaws.com/geolocation_ecr'
        registryCredential = 'jenkins-ecr'
        dockerimage = '' 
    }
    stages {
      /**  stage('Checkout'){
            steps{
                 git branch: 'main', url: 'https://github.com/dodzi2022/geoMVPX0.git'
            }
        }
        stage('Code Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        // Building Docker images
        stage('Building image') {
            steps{
                script {
                    dockerImage= docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
        // Uploading Docker images into AWS ECR
        stage('Pushing to ECR') {
            steps{
                script {
                    
                  docker.withRegistry("https://"+registry,"ecr:us-east-2:"+registryCredential) {
                       dockerImage.push()
                   }
               }
            }
        } 
        **/
        //deploy the image that is in ECR to our EKS cluster
        stage ("Kube Deploy") {
            steps {
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'eks_credential', namespace: '', serverUrl: '') {
                  // sh "sudo /root/bin/kubectl apply -f  eks_deploy_from_ecr.yaml"
                 // sh "sudo /root/bin/kubectl apply -f  service.yaml"
                  sh " /root/bin/kubectl get nodes "
                }
            }
        }
    }
}
